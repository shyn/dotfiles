unbind C-b
set -g prefix C-q
bind q send-prefix


setw -g mode-keys vi
set -g mouse on
set -g default-terminal "xterm-256color"

bind -r h select-pane -L
bind -r l select-pane -R
bind -r j select-pane -D
bind -r k select-pane -U

unbind %
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-selection

bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# set -g pane-resize-increment 3 # 将步长设置为 3 (默认 1)
# 状态栏整体风格
set -g status-style "bg=colour235,fg=colour255"

# 状态栏左侧
set -g status-left-length 40
# #S (session name) 段落在 colour240 背景上，然后通过  过渡到 colour235 (状态栏主背景)
set -g status-left "#[fg=colour255,bg=colour240] #S #[fg=colour240,bg=colour235,nobold,noitalics,nounderscore]"

# 状态栏右侧
set -g status-right-length 150
# 从 colour235 (状态栏主背景) 通过  过渡到 colour240 (日期时间背景)
# 日期时间段落在 colour240 背景上，然后通过  过渡到 colour166 (主机名背景)
# 主机名段落在 colour166 背景上
set -g status-right "#[fg=colour240,bg=colour235,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour240] %Y-%m-%d  %H:%M #[fg=colour166,bg=colour240,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour166] #H "

# 非当前窗口状态格式 (inactive windows)
# 非活动窗口直接显示在 colour235 (状态栏主背景) 上，不使用额外的 Powerline 分隔符
# 这样它们就能平滑地融入整体状态栏背景
set -g window-status-format "#[fg=colour255,bg=colour235] #I:#W#F "

# 当前窗口状态格式 (active window)
# 从 colour235 (状态栏主背景) 通过  过渡到 colour166 (当前窗口背景)
# 当前窗口段落在 colour166 背景上
# 从 colour166 (当前窗口背景) 通过  过渡回 colour235 (状态栏主背景)
set -g window-status-current-format "#[fg=colour235,bg=colour166,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour166,bold] #I:#W#F #[fg=colour166,bg=colour235,nobold,noitalics,nounderscore]"

# 窗口分隔符 (空，因为 Powerline 风格通过颜色过渡和字符实现分隔)
set -g window-status-separator ""
# 状态栏整体风格
set -g status-style "bg=colour235,fg=colour255"

# 状态栏左侧
set -g status-left-length 40
# #S (session name) 段落在 colour240 背景上，然后通过  过渡到 colour235 (状态栏主背景)
set -g status-left "#[fg=colour255,bg=colour240] #S #[fg=colour240,bg=colour235,nobold,noitalics,nounderscore]"

# 状态栏右侧
set -g status-right-length 150
# 从 colour235 (状态栏主背景) 通过  过渡到 colour240 (日期时间背景)
# 日期时间段落在 colour240 背景上，然后通过  过渡到 colour166 (主机名背景)
# 主机名段落在 colour166 背景上
set -g status-right "#[fg=colour240,bg=colour235,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour240] %Y-%m-%d  %H:%M #[fg=colour166,bg=colour240,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour166] #H "

# 非当前窗口状态格式 (inactive windows)
# 非活动窗口直接显示在 colour235 (状态栏主背景) 上，不使用额外的 Powerline 分隔符
# 这样它们就能平滑地融入整体状态栏背景
set -g window-status-format "#[fg=colour255,bg=colour235] #I:#W#F "

# 当前窗口状态格式 (active window)
# 从 colour235 (状态栏主背景) 通过  过渡到 colour166 (当前窗口背景)
# 当前窗口段落在 colour166 背景上
# 从 colour166 (当前窗口背景) 通过  过渡回 colour235 (状态栏主背景)
set -g window-status-current-format "#[fg=colour235,bg=colour166,nobold,noitalics,nounderscore]#[fg=colour255,bg=colour166,bold] #I:#W#F #[fg=colour166,bg=colour235,nobold,noitalics,nounderscore]"

# 窗口分隔符 (空，因为 Powerline 风格通过颜色过渡和字符实现分隔)
set -g window-status-separator ""

#set -g status-position top
#set-option -g status-justify left
#set-option -g status-left '#[fg=cyan][#{session_name}]'
#set-option -g status-right '#[fg=#9e5d3c]#(tmux-status-right.sh)'

# Log output to a text file
bind P pipe-pane -o "cat >> ~/tmux.#W.log" \; display "Logging to ~/tmux.#W.log"
